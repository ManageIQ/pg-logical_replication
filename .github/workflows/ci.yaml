name: CI

on: [push, pull_request]

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version:
        - '2.5'
        - '2.6'
        - '2.7'
        - '3.0'
    services:
      postgres:
        image: manageiq/postgresql:13
        env:
          POSTGRESQL_USER: root
          POSTGRESQL_PASSWORD: smartvm
          POSTGRESQL_DATABASE: temp
        options: >-
          --name postgres
          --volume /tmp/postgresql-cfg/:/opt/app-root/src/postgresql-cfg/
          --health-cmd pg_isready
          --health-interval 2s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 5432:5432
    steps:
    - uses: actions/checkout@v3
    - name: Override postgres settings
      run: |
        set -x
        sudo chown -R $(id -u):$(id -g) /tmp/postgresql-cfg
        cp -rf .github/ci/postgresql-cfg/* /tmp/postgresql-cfg
        psql -c "SELECT pg_reload_conf()"
        set +x
      env:
        PGHOST: localhost
        PGUSER: root
        PGPASSWORD: smartvm
        PGDATABASE: temp
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true
      timeout-minutes: 30
    - name: Set up tests
      run: bundle exec rake spec:setup
      env:
        POSTGRESQL_HOST: localhost
        POSTGRESQL_USER: root
        POSTGRESQL_PASSWORD: smartvm
    - name: Run tests
      run: bundle exec rake
      env:
        POSTGRESQL_HOST: localhost
        POSTGRESQL_USER: root
        POSTGRESQL_PASSWORD: smartvm
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
    - if: ${{ github.ref == 'refs/heads/master' && matrix.ruby-version == '2.7' }}
      name: Report code coverage
      continue-on-error: true
      uses: paambaati/codeclimate-action@v5
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
